{"version":3,"sources":["index.js"],"names":["interval","body","document","querySelector","timer","status","startTimer","resTimer","pauseBtn","minutes","seconds","work","pause","textContent","style","display","classList","add","setTimer","setInterval","fetch","start","clearInterval","pauseTimer","resetTimer","replace","addEventListener"],"mappings":";AAAA,IAQEA,EARIC,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,UAC/BE,EAASH,SAASC,cAAc,WAChCG,EAAaJ,SAASC,cAAc,eACpCI,EAAWL,SAASC,cAAc,aAClCK,EAAWN,SAASC,cAAc,aACpCM,EAAU,GACZC,EAAU,EAEVC,GAAO,EACPC,GAAQ,EAIVR,EAAMS,YAAiBJ,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,GACrEF,EAASM,MAAMC,QAAU,OACzBd,EAAKe,UAAUC,IAAI,QAInB,IAAMC,EAAW,WACflB,EAAWmB,YAAY,WACN,GAAXT,GACFD,GAAW,EACXC,EAAU,IACLA,IACQ,GAAXD,GAA2B,GAAXC,IAClBU,MAAiBT,WAAAA,OAAAA,EAAO,QAAU,SAClCU,KAEFjB,EAAMS,YAAiBJ,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,IACpE,MAKCW,EAAQ,WACZf,EAAWQ,MAAMC,QAAU,OAC3BO,cAActB,GACdS,EAAUE,EAAO,GAAK,EACtBD,EAAU,EACVN,EAAMS,YAAiBJ,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,GACrEL,EAAOQ,YAAcF,EAAO,YAAc,aAC1CV,EAAKe,UAAYL,EAAO,OAAS,QACjCO,IACAP,GAAQA,EACRH,EAASM,MAAMC,QAAU,SAGrBQ,EAAa,WACZX,GAIHM,IACAV,EAASK,YAAc,UAJvBS,cAActB,GACdQ,EAASK,YAAc,YAKzBD,GAASA,GAGLY,EAAa,WACbnB,EAAOQ,cAAaF,GAAQA,GAChCV,EAAKe,UAAUS,QAAQ,QAAS,QAChCH,cAActB,GACdS,EAAU,GACVC,EAAU,EACVN,EAAMS,YAAiBJ,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,GACrEL,EAAOQ,YAAc,IAKvBP,EAAWoB,iBAAiB,QAAS,WAAML,OAAAA,MAC3Cb,EAASkB,iBAAiB,QAAS,WAAMH,OAAAA,MACzChB,EAASmB,iBAAiB,QAAS,WAAMF,OAAAA","file":"src.1da38175.js","sourceRoot":"..\\src","sourcesContent":["const body = document.querySelector('body')\r\nconst timer = document.querySelector('#timer')\r\nconst status = document.querySelector('#status')\r\nconst startTimer = document.querySelector('#startTimer')\r\nconst resTimer = document.querySelector('#resTimer')\r\nconst pauseBtn = document.querySelector('#pauseBtn')\r\nvar minutes = 25,\r\n  seconds = 0,\r\n  interval,\r\n  work = true,\r\n  pause = false\r\n\r\n// Styles and content\r\n\r\ntimer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\npauseBtn.style.display = 'none'\r\nbody.classList.add('work')\r\n\r\n// Start timer\r\n\r\nconst setTimer = () => {\r\n  interval = setInterval(() => {\r\n    if (seconds == 0) {\r\n      minutes -= 1\r\n      seconds = 59\r\n    } else seconds--\r\n    if (minutes == 0 && seconds == 0) {\r\n      fetch(`/notify/${work ? 'Break' : 'Work'}`)\r\n      start()\r\n    }\r\n    timer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n  }, 1000)\r\n}\r\n\r\n// Controls\r\n\r\nconst start = () => {\r\n  startTimer.style.display = 'none'\r\n  clearInterval(interval)\r\n  minutes = work ? 25 : 5\r\n  seconds = 0\r\n  timer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n  status.textContent = work ? 'Work time' : 'Break time'\r\n  body.classList = work ? 'work' : 'break'\r\n  setTimer()\r\n  work = !work\r\n  pauseBtn.style.display = 'block'\r\n}\r\n\r\nconst pauseTimer = () => {\r\n  if (!pause) {\r\n    clearInterval(interval)\r\n    pauseBtn.textContent = 'Continue'\r\n  } else {\r\n    setTimer()\r\n    pauseBtn.textContent = 'Pause'\r\n  }\r\n  pause = !pause\r\n}\r\n\r\nconst resetTimer = () => {\r\n  if (status.textContent) work = !work\r\n  body.classList.replace('break', 'work')\r\n  clearInterval(interval)\r\n  minutes = 25\r\n  seconds = 0\r\n  timer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n  status.textContent = ''\r\n}\r\n\r\n// Listeners\r\n\r\nstartTimer.addEventListener('click', () => start())\r\npauseBtn.addEventListener('click', () => pauseTimer())\r\nresTimer.addEventListener('click', () => resetTimer())"]}