{"version":3,"sources":["index.js"],"names":["body","document","querySelector","classList","add","interval","timer","status","startTimer","resTimer","pauseBtn","minutes","seconds","work","textContent","setTimer","setInterval","start","resetTimer","replace","clearInterval","fetch","pause","console","log","addEventListener"],"mappings":";AAAA,IAAMA,EAAOC,SAASC,cAAc,QACpCF,EAAKG,UAAUC,IAAI,QACnB,IAOIC,EAPEC,EAAQL,SAASC,cAAc,UAC/BK,EAASN,SAASC,cAAc,WAChCM,EAAaP,SAASC,cAAc,eACpCO,EAAWR,SAASC,cAAc,aAClCQ,EAAWT,SAASC,cAAc,aACpCS,EAAU,EACVC,EAAU,EAEVC,GAAO,EACXP,EAAMQ,YAAiBH,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,GAErE,IAAMG,EAAW,WACfV,EAAWW,YAAY,WACN,GAAXJ,GACFD,GAAW,EACXC,EAAU,IACLA,IACQ,GAAXD,GAA2B,GAAXC,GAClBK,IAEFX,EAAMQ,YAAiBH,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,IACpE,MAGCM,EAAa,WACbX,EAAOO,cAAaD,GAAQA,GAChCb,EAAKG,UAAUgB,QAAQ,QAAS,QAChCC,cAAcf,GACdM,EAAU,GACVC,EAAU,EACVN,EAAMQ,YAAiBH,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,GACrEL,EAAOO,YAAc,IAGjBG,EAAQ,WACZG,cAAcf,GACdM,EAAiB,EACjBC,EAAU,EACVN,EAAMQ,YAAiBH,GAAAA,OAAAA,EAAaC,OAAAA,OAAAA,EAAU,GAAM,IAAMA,EAAWA,GACrEL,EAAOO,YAAcD,EAAO,YAAc,aAC1Cb,EAAKG,UAAYU,EAAO,OAAS,QACjCQ,MAAiBR,WAAAA,OAAAA,EAAO,QAAU,SAClCE,IACAF,GAAQA,GAGJS,EAAQ,WACZC,QAAQC,IAAIb,GACZY,QAAQC,IAAIZ,IAGdJ,EAAWiB,iBAAiB,QAAS,WACnCR,MAGFP,EAASe,iBAAiB,QAAS,WACjCP,MAGFT,EAASgB,iBAAiB,QAAS,WACjCP","file":"src.52e05274.js","sourceRoot":"..\\src","sourcesContent":["const body = document.querySelector('body')\r\nbody.classList.add('work')\r\nconst timer = document.querySelector('#timer')\r\nconst status = document.querySelector('#status')\r\nconst startTimer = document.querySelector('#startTimer')\r\nconst resTimer = document.querySelector('#resTimer')\r\nconst pauseBtn = document.querySelector('#pauseBtn')\r\nvar minutes = 5,\r\n    seconds = 0,\r\n    interval,\r\n    work = true\r\ntimer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n\r\nconst setTimer = () => {\r\n  interval = setInterval(() => {\r\n    if (seconds == 0) {\r\n      minutes -= 1\r\n      seconds = 59\r\n    } else seconds--\r\n    if (minutes == 0 && seconds == 0) {\r\n      start()\r\n    }\r\n    timer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n  }, 100)\r\n}\r\n\r\nconst resetTimer = () => {\r\n  if (status.textContent) work = !work\r\n  body.classList.replace('break', 'work') \r\n  clearInterval(interval)\r\n  minutes = 25\r\n  seconds = 0\r\n  timer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n  status.textContent = ''\r\n}\r\n\r\nconst start = () => {\r\n  clearInterval(interval)\r\n  minutes = work ? 5 : 5\r\n  seconds = 0\r\n  timer.textContent = `${minutes} : ${seconds < 10 ? ('0' + seconds) : seconds}`\r\n  status.textContent = work ? 'Work time' : 'Break time'\r\n  body.classList = work ? 'work' : 'break'\r\n  fetch(`/notify/${work ? 'Break' : 'Work'}`)\r\n  setTimer()\r\n  work = !work\r\n}\r\n\r\nconst pause = () => {\r\n  console.log(minutes)\r\n  console.log(seconds)\r\n}\r\n\r\nstartTimer.addEventListener('click', () => {\r\n  start()\r\n})\r\n\r\npauseBtn.addEventListener('click', () => {\r\n  resetTimer()\r\n})\r\n\r\nresTimer.addEventListener('click', () => {\r\n  resetTimer()\r\n})\r\n\r\n\r\n\r\n"]}